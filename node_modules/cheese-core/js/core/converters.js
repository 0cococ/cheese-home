export default class converters {
    constructor() {
    }
    static pairArrayAsync(...data) {
        return ConvertersApi.pairArrayAsync(...data);
    }
    static pairArray(...args) {
        if (typeof args[0] === 'string') {
            const data = args[0];
            return ConvertersApi.pairArray(...data);
        }
        else {
            const data = args;
            return ConvertersApi.pairArray(...data);
        }
    }
    static pairArraysAsync(...data) {
        return ConvertersApi.pairArraysAsync(...data);
    }
    static pairArrays(...data) {
        return ConvertersApi.pairArrays(...data);
    }
    static sdToStreamAsync(filePath) {
        return ConvertersApi.sdToStreamAsync(filePath);
    }
    static sdToStream(filePath) {
        return ConvertersApi.sdToStream(filePath);
    }
    static assetsToStreamAsync(filePath) {
        return ConvertersApi.assetsToStreamAsync(filePath);
    }
    static assetsToStream(filePath) {
        return ConvertersApi.assetsToStream(filePath);
    }
    static streamToBitmapAsync(inputStream) {
        return ConvertersApi.streamToBitmapAsync(inputStream);
    }
    static streamToBitmap(inputStream) {
        return ConvertersApi.streamToBitmap(inputStream);
    }
    static bitmapToStreamAsync(bitmap) {
        return ConvertersApi.bitmapToStreamAsync(bitmap);
    }
    static bitmapToStream(bitmap) {
        return ConvertersApi.bitmapToStream(bitmap);
    }
    static base64ToBitmapAsync(base64String) {
        return ConvertersApi.base64ToBitmapAsync(base64String);
    }
    static base64ToBitmap(base64String) {
        return ConvertersApi.base64ToBitmap(base64String);
    }
    static bitmapToBase64Async(bitmap) {
        return ConvertersApi.bitmapToBase64Async(bitmap);
    }
    static bitmapToBase64(bitmap) {
        return ConvertersApi.bitmapToBase64(bitmap);
    }
}
