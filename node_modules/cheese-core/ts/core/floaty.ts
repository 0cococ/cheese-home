declare var FloatyApi: any
import { EasyWindow } from "types";
export default class floaty {
    constructor() {
    }

    public static floatWithAsync(): Promise<EasyWindow<any>> {
        return FloatyApi.floatWithAsync();
    }

    public static floatWith(): EasyWindow<any> {
        return FloatyApi.floatWith();
    }

    public static requestPermissionAsync(timeout: number): Promise<EasyWindow<any>> {
        return FloatyApi.requestPermissionAsync(timeout);
    }

    public static requestPermission(timeout: number): EasyWindow<any> {
        return FloatyApi.requestPermissionAsync(timeout);
    }

    public static checkPermissionAsync(): Promise<boolean> {
        return FloatyApi.checkPermissionAsync();
    }

    public static checkPermission(): boolean {
        return FloatyApi.checkPermission();
    }
    public static getFloaty(): any {
        return FloatyApi.getEasyWindowClass();
    }

    public static drawToScreenAsync(text:string,left:number,top:number,right:number,bottom:number): Promise<any> {
        return FloatyApi.drawToScreenAsync(text,left,top,right,bottom,left);
    }


    public static drawToScreen(text:string,textColor:number,borderedColor:number,rect:any): any
    public static drawToScreen(text:string,rect:any): any
    public static drawToScreen(...args: any[]): any {
        return FloatyApi.drawToScreen(...args);
    }

}