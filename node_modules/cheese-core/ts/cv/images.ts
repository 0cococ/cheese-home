declare var ImagesApi: any
import { Bitmap,IntArray,Rect } from "types";
export default class images {
    constructor() {
    }
    public draw(path:String):boolean{
        return ImagesApi.draw(path)
    }
    public getBounds():Rect{
        return ImagesApi.getBounds()
    }

    public static  findImgByResizeAsync(inputImage: Bitmap, targetImage: Bitmap, width: number, height: number): Promise<IntArray> {
        return ImagesApi.findImgByResizeAsync(inputImage,targetImage,width,height);
    }

    public static  findImgByResize(inputImage: Bitmap, targetImage: Bitmap, width: number, height: number): IntArray {
        return ImagesApi.findImgByResize(inputImage,targetImage,width,height);
    }
    public static findImgBySiftAsync(inputImage: Bitmap, targetImage: Bitmap, threshold: number): Promise<IntArray> {
        return ImagesApi.findImgBySiftAsync(inputImage,targetImage,threshold);
    }

    public static findImgBySift(inputImage: Bitmap, targetImage: Bitmap, threshold: number): IntArray {
        return ImagesApi.findImgBySift(inputImage,targetImage,threshold);
    }
    // public static findImgByOBRAsync(inputImage: Bitmap, targetImage: Bitmap, threshold: number): Promise<IntArray> {
    //     return ImagesApi.findImgByOBRAsync(inputImage,targetImage,threshold);
    // }
    //
    // public static findImgByOBR(inputImage: Bitmap, targetImage: Bitmap, threshold: number): IntArray {
    //     return ImagesApi.findImgByOBR(inputImage,targetImage,threshold);
    // }


}