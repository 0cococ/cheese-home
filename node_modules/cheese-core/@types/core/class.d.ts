import { Class, List } from "types";
declare type ClassUtils = {
    clz: string;
    new: (...args: any[]) => any;
    set: (nodeName: string, name?: string) => string;
};
export default class class_ {
    constructor();
    static readonly Boolean: Class<boolean>;
    static readonly String: Class<string>;
    static readonly Float: Class<number>;
    static readonly Long: Class<number>;
    static readonly ByteArray: Class<any>;
    static getClassListAsync(packageName: string): Promise<List<string>>;
    static getClassList(packageName: string): List<string>;
    static loadDexAsync(path: string): Promise<void>;
    static loadDex(path: string): void;
    static hasClassAsync(className: string): Promise<boolean>;
    static hasClass(className: string): boolean;
    static findClassAsync(className: string): Promise<ClassUtils>;
    static findClass(className: string): ClassUtils;
}
export {};
