declare module "types" {
    type List<T> = [T];
    type EasyWindow<T> = [T];
    type InputStream = {};
    type Pair<T, U> = [T, U];
    type Callback = {};
    type Bitmap = {};
    type Class<T> = [T];
    type WorkerUtils = {};
    type Rect = [left: number, top: number, right: number, bottom: number];
    type IntArray = {
        x: string;
        y: string;
    };
    type View = {};
    type Map<T, U> = [T, U];
    type MutableList<T> = [T];
    type Yolov8Ncnn = {
        Obj: any;
    };
    type File = {
        path: string;
    };
    type IConsoleClient = {
        show(): void;
        log(log: string): void;
        clear(): void;
        hide(): void;
        setTouch(enabled: boolean): void;
    };
    type IToolWindowClient = {
        show(): void;
        hide(): void;
        cancel(): void;
    };
}
